[package]
name = "mantra-dex-sdk"
version = "0.1.0"
edition = "2021"
description = "A Rust SDK for interacting with the Mantra DEX on the Mantra Dukong Network"
license = "MIT"

[[bin]]
name = "mantra-dex-tui"
path = "src/bin/main.rs"

[[bin]]
name = "tui"
path = "src/bin/tui.rs"

[[bin]]
name = "mcp-server"
path = "src/bin/mcp.rs"
required-features = ["mcp"]


[package.metadata.commands]
tui = "cargo run --bin mantra-dex-tui --features tui"

[features]
default = []
tui = ["ratatui", "crossterm", "tokio-util", "tui-input", "env_logger"]
mcp = [
    "rust-mcp-sdk",
    "rust-mcp-schema",
    "async-trait",
    "tracing",
    "tracing-subscriber",
    "axum",
    "hyper",
    "hyper-util",
    "tower",
    "uuid",
    "num_cpus",
]

[dependencies]
mantra-dex-std = "3.0.0"
mantrachain-std = "0.2.0"
cosmrs = { version = "0.21.1", features = ["rpc", "bip32", "cosmwasm"] }
cosmwasm-std = "2.2.2"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
anyhow = "1.0"
tokio = { version = "1.32", features = ["full"] }
bip32 = "0.5"
bip39 = "2.0"
clap = { version = "4.4", features = ["derive"] }
dotenv = "0.15"
reqwest = { version = "0.11", features = ["json"] }
futures = "0.3"
hex = "0.4"
toml = "0.8"
dirs = "5.0"
base64 = "0.21"
rand = "0.8"
config = "0.15.11"
aes-gcm = "0.10"
argon2 = "0.5"
prost = "0.13.5"
prost-types = "0.13.5"
cosmos-sdk-proto = "0.26.1"
serde_bytes = "0.11.17"

# TUI dependencies - optional via "tui" feature
ratatui = { version = "0.29.0", features = [
    "crossterm",
    "all-widgets",
], optional = true }
crossterm = { version = "0.28.1", optional = true }
tokio-util = { version = "0.7", optional = true }
tui-input = { version = "0.10", optional = true }
chrono = { version = "0.4", features = ["serde"] }
env_logger = { version = "0.10", optional = true }

# MCP SDK Dependencies for Model Context Protocol server - optional via "mcp" feature
rust-mcp-sdk = { version = "0.4.2", features = [
    "server",
    "macros",
    "hyper-server",
], optional = true }
rust-mcp-schema = { version = "0.5.2", features = [
    "latest",
    "schema_utils",
], optional = true }
async-trait = { version = "0.1.82", optional = true }
tracing = { version = "0.1.40", optional = true }
tracing-subscriber = { version = "0.3.18", features = [
    "env-filter",
], optional = true }
axum = { version = "0.8.1", optional = true }
hyper = { version = "1.6.0", optional = true }
hyper-util = { version = "0.1.10", features = ["tokio"], optional = true }
tower = { version = "0.5.1", optional = true }
uuid = { version = "1.11.0", features = ["v4", "serde"], optional = true }
num_cpus = { version = "1.16", optional = true }

[dev-dependencies]
tokio-test = "0.4"
env_logger = "0.10"
tempfile = "3.8"

# Note: Use cargo run --bin mantra-dex-tui --features tui to start the TUI
# Examples:
#   cargo run --bin mantra-dex-tui --features tui --help
#   cargo run --bin mantra-dex-tui --features tui --network testnet  
#   cargo run --bin mantra-dex-tui --features tui --network mainnet
#
# MCP Server Development:
#   cargo check --features mcp        # Check MCP server compilation
#   cargo build --features mcp        # Build with MCP server support
#   cargo run --bin mcp-server --features mcp          # Run MCP server with stdio transport
#   cargo run --bin mcp-server --features mcp -- --transport http --port 8080  # Run HTTP server
#   cargo run --bin mcp-server --features mcp -- --help                        # Show server help
